-- Create roles table
CREATE TABLE IF NOT EXISTS roles (
                                     id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                                     role_name VARCHAR(50) NOT NULL UNIQUE,
    description VARCHAR(200),
    created_at TIMESTAMP WITHOUT TIME ZONE DEFAULT CURRENT_TIMESTAMP,
    insert_user_id BIGINT,
    updated_at TIMESTAMP WITHOUT TIME ZONE DEFAULT CURRENT_TIMESTAMP,
    last_update_user_id BIGINT,
    is_deleted BOOLEAN DEFAULT FALSE
    );

-- Create users table
CREATE TABLE IF NOT EXISTS users (
                                     id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                                     username VARCHAR(50) NOT NULL UNIQUE,
    email VARCHAR(100) NOT NULL UNIQUE,
    password VARCHAR(100) NOT NULL,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    role_id BIGINT REFERENCES roles(id) ON DELETE SET NULL,
    created_at TIMESTAMP WITHOUT TIME ZONE DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP WITHOUT TIME ZONE DEFAULT CURRENT_TIMESTAMP,
    insert_user_id BIGINT,
    last_update_user_id BIGINT,
    is_deleted BOOLEAN DEFAULT FALSE
    );

-- Insert initial data into roles table
INSERT INTO roles (role_name, description)
VALUES
    ('ADMIN', 'Administrator role with full access'),
    ('USER', 'Regular user role with limited access');

-- Insert initial data into users table
INSERT INTO users (username, email, password, first_name, last_name, role_id)
VALUES
    ('admin', 'admin@example.com', 'admin_password_hash', 'Admin', 'User', (SELECT id FROM roles WHERE role_name = 'ADMIN')),
    ('john_doe', 'john.doe@example.com', 'user_password_hash', 'John', 'Doe', (SELECT id FROM roles WHERE role_name = 'USER'));

-- Error handling example: Insert a role with a duplicate role_name (This should fail if duplicate)
INSERT INTO roles (role_name, description)
VALUES
    ('ADMIN', 'Duplicate role name example')
    ON CONFLICT (role_name) DO NOTHING;